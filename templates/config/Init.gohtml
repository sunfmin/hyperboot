@{
    import  (
		"strings"
    )
    var data ConfigData
}

@{
	var upcaseModule = strings.ToUpper(data.Module)
}
package config

import (
	"log"
	"os"
	"strings"
)

// this is configured from env variables
var (
	Env                 string
	WebDir              string
	@if data.Database == "mysql" {
		@raw(MysqlVars())
	}
)

func init() {
	Env = envOrPanic("@(upcaseModule)_ENV", false)
	WebDir = envOrPanic("@(upcaseModule)_WEBDIR", false)
	@if data.Database == "mysql" {
		@raw(MysqlAssigns(upcaseModule))
	}
}

func envOrPanic(key string, allowEmpty bool) (r string) {
	r = os.Getenv(key)
	if r == "" && !allowEmpty {
		panic("env " + key + " is not set")
	}
	logValue := r
	if strings.Contains(logValue, "PASSWORD") || strings.Contains(logValue, "SECRET") {
		logValue = "<HIDDEN>"
	}
	log.Printf("Configure: %s = %s\n", key, logValue)
	return
}
